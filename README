Финальный проект для прохождения тренинга в epam

Проект представляет собой сайт для принятия заказов на доставку еды от клиентов Беларуси. Существуют 4 уровня доступа:

Аноним (Может заказывать пиццу и смотреть предложения на сайте, войти на сайт)

Клиент (Может заказывать пиццу, привязывая заказ к своему аккаунту. Основной плюс в том, что адрес и личные данные при заказе заполняются автоматически, хоть клиент и может данные при заказе изменить)

Оператор (Принимает заказы, изменяет информацию в заказах, не может самостоятельно создать заказ)

Администратор (Управляет видимым контентом на сайте, может добавлять и изменять продукты, группы продуктов, а также польозвателей. В том числе блокировать и разблокировать пользователей)

Проект построен согласно требованиям, написанным в документе.

Некоторые подробности о проекте:
- Регистрация реализована при подтверждении email почты(при правильных введенных данных создается токен на основании этих данных и секретного ключа, а потом высылается форма на указанный емайл с указанными данными и этим токеном. После нажатия на кнопку этой формы создается новый пользователь).
https://temp-mail.org/ru/ Возможный способ тестировать данную функциональность
- Пользователь может менять свои некоторые свои данные в личном кабинете.
- Пароли пользователей захешированы с помощью sha256 и в таком виде хранятся в базе данных.
- Администратор не может поменять пароль пользователя, однако может создать нового пользователя и указать его пароль.
- Блокировка администратором пользователя работает сразу, то есть заблокированный авторизированный пользователь сразу увидит результат блокировки при следующем запросе.
- Главная цель регистрации пользователя должна быть в том, чтобы не вводить самому одни и те же данные несколько раз.
- Корзина вошедшего клиента хранится в базе данных, анонима - в сессии.

Отдельно касательно пагинации:
1) Списки возможных для заказа продуктов изначально не планируются делать большими, поэтому на главных страницах и в редактировании оператором продуктов не реализована такого вида пагинация(вместо этого создана возможность смотреть списки по типу продукта).
2) Пагинация реализована при просмотре списка пользователей администратором, просмотре заказов оператором, просмотре всех продуктов администратором, просмотре всех групп продуктов администратором

Набросок этого же проекта без жесткой архитектуры с технологиями Spring Boot, Spring Security, Spring MVC, JSP, JPA, Hibernate можно посмотреть по ссылке:
https://github.com/jan-bajaryn/cafe

(Начинал создаваться до начала изучения Servlets для лучшего понимания того, как должен выглядеть проект в итоге)
